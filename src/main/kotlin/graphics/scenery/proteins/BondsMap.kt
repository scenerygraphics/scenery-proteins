package graphics.scenery.proteins
import org.biojava.nbio.structure.*

class BondsMap()  {


    fun bonds(): List<AminoAcid> {

        val ACE = AminoAcid("ACE", listOf(
                Triple("1HH3'", "CA'", 1),
                Triple("1HH3'", "CH3'", 1),
                Triple("3HA'", "CA'", 1),
                Triple("3HA'", "CH3'", 1),
                Triple("HH31'", "CA'", 1),
                Triple("HH31'", "CH3'", 1),
                Triple("1HA'", "CA'", 1),
                Triple("1HA'", "CH3'", 1),
                Triple("2HH3'", "CA'", 1),
                Triple("2HH3'", "CH3'", 1),
                Triple("HH32'", "CA'", 1),
                Triple("HH32'", "CH3'", 1),
                Triple("2HA'", "CA'", 1),
                Triple("2HA'", "CH3'", 1),
                Triple("3HH3'", "CA'", 1),
                Triple("3HH3'", "CH3'", 1),
                Triple("HH33'", "CA'", 1),
                Triple("HH33'", "CH3'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "CH3'", 1),
                Triple("C'", "O'", 2)
        ))


        val ALA = AminoAcid("ALA", listOf(
                Triple("1HB'", "CB'", 1),
                Triple("HB1'", "CB'", 1),
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2HB'", "CB'", 1),
                Triple("HB2'", "CB'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("3HB'", "CB'", 1),
                Triple("HB3'", "CB'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1)
        ))

        val ARG = AminoAcid("ARG", listOf(
                Triple("1HH1'", "NH1'", 1),
                Triple("HH11'", "NH1'", 1),
                Triple("1HH2'", "NH2'", 1),
                Triple("HH21'", "NH2'", 1),
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2HB'", "CB'", 1),
                Triple("HB2'", "CB'", 1),
                Triple("2HD'", "CD'", 1),
                Triple("HD2'", "CD'", 1),
                Triple("2HG'", "CG'", 1),
                Triple("HG2'", "CG'", 1),
                Triple("2HH1'", "NH1'", 1),
                Triple("HH12'", "NH1'", 1),
                Triple("2HH2'", "NH2'", 1),
                Triple("HH22'", "NH2'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("1HB'", "CB'", 1),
                Triple("3HB'", "CB'", 1),
                Triple("HB1'", "CB'", 1),
                Triple("HB3'", "CB'", 1),
                Triple("1HD'", "CD'", 1),
                Triple("3HD'", "CD'", 1),
                Triple("HD1'", "CD'", 1),
                Triple("HD3'", "CD'", 1),
                Triple("1HG'", "CG'", 1),
                Triple("3HG'", "CG'", 1),
                Triple("HG1'", "CG'", 1),
                Triple("HG3'", "CG'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "CG'", 1),
                Triple("CD'", "CG'", 1),
                Triple("CD'", "NE'", 1),
                Triple("CZ'", "NE'", 1),
                Triple("CZ'", "NH1'", 2),
                Triple("CZ'", "NH2'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1),
                Triple("HE'", "NE'", 1)
        ))

        val ASH = AminoAcid("ASH", listOf(
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2HB'", "CB'", 1),
                Triple("HB2'", "CB'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("1HB'", "CB'", 1),
                Triple("3HB'", "CB'", 1),
                Triple("HB1'", "CB'", 1),
                Triple("HB3'", "CB'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "CG'", 1),
                Triple("CG'", "OD1'", 2),
                Triple("CG'", "OD2'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1),
                Triple("HD2'", "OD2'", 1)
        ))

        val ASN = AminoAcid("ASN", listOf(
                Triple("1HD2'", "ND2'", 1),
                Triple("HD21'", "ND2'", 1),
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2HB'", "CB'", 1),
                Triple("HB2'", "CB'", 1),
                Triple("2HD2'", "ND2'", 1),
                Triple("HD22'", "ND2'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("1HB'", "CB'", 1),
                Triple("3HB'", "CB'", 1),
                Triple("HB1'", "CB'", 1),
                Triple("HB3'", "CB'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "CG'", 1),
                Triple("CG'", "ND2'", 1),
                Triple("CG'", "OD1'", 2),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1)
        ))

        val ASP = AminoAcid("ASP", listOf(
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2HB'", "CB'", 1),
                Triple("HB2'", "CB'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("1HB'", "CB'", 1),
                Triple("3HB'", "CB'", 1),
                Triple("HB1'", "CB'", 1),
                Triple("HB3'", "CB'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "CG'", 1),
                Triple("CG'", "OD1'", 2),
                Triple("CG'", "OD2'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1)
        ))

        val CYM = AminoAcid("CYM", listOf(
                Triple("2HB'", "CB'", 1),
                Triple("HB2'", "CB'", 1),
                Triple("3HB'", "CB'", 1),
                Triple("HB3'", "CB'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "SG'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1)
        ))

        val CYS = AminoAcid("CYS", listOf(
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2HB'", "CB'", 1),
                Triple("HB2'", "CB'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("1HB'", "CB'", 1),
                Triple("3HB'", "CB'", 1),
                Triple("HB1'", "CB'", 1),
                Triple("HB3'", "CB'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "SG'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1),
                Triple("HG'", "SG'", 1),
                Triple("HG1'", "SG'", 1)
        ))

        val CYX = AminoAcid("CYX", listOf(
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2HB'", "CB'", 1),
                Triple("HB2'", "CB'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("1HB'", "CB'", 1),
                Triple("3HB'", "CB'", 1),
                Triple("HB1'", "CB'", 1),
                Triple("HB3'", "CB'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "SG'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1)
        ))

        val GLN = AminoAcid("GLN", listOf(
                Triple("1HE2'", "NE2'", 1),
                Triple("HE21'", "NE2'", 1),
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2HB'", "CB'", 1),
                Triple("HB2'", "CB'", 1),
                Triple("2HE2'", "NE2'", 1),
                Triple("HE22'", "NE2'", 1),
                Triple("2HG'", "CG'", 1),
                Triple("HG2'", "CG'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("1HB'", "CB'", 1),
                Triple("3HB'", "CB'", 1),
                Triple("HB1'", "CB'", 1),
                Triple("HB3'", "CB'", 1),
                Triple("1HG'", "CG'", 1),
                Triple("3HG'", "CG'", 1),
                Triple("HG1'", "CG'", 1),
                Triple("HG3'", "CG'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "CG'", 1),
                Triple("CD'", "CG'", 1),
                Triple("CD'", "NE2'", 1),
                Triple("CD'", "OE1'", 2),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1)
        ))

        val GLP = AminoAcid("GLP", listOf(
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2HB'", "CB'", 1),
                Triple("HB2'", "CB'", 1),
                Triple("2HG'", "CG'", 1),
                Triple("HG2'", "CG'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("1HB'", "CB'", 1),
                Triple("3HB'", "CB'", 1),
                Triple("HB1'", "CB'", 1),
                Triple("HB3'", "CB'", 1),
                Triple("1HG'", "CG'", 1),
                Triple("3HG'", "CG'", 1),
                Triple("HG1'", "CG'", 1),
                Triple("HG3'", "CG'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "CG'", 1),
                Triple("CD'", "CG'", 1),
                Triple("CD'", "OE1'", 2),
                Triple("CD'", "OE2'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1),
                Triple("HE2'", "OE2'", 1)
        ))

        val GLU = AminoAcid("GLU", listOf(
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2HB'", "CB'", 1),
                Triple("HB2'", "CB'", 1),
                Triple("2HG'", "CG'", 1),
                Triple("HG2'", "CG'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("1HB'", "CB'", 1),
                Triple("3HB'", "CB'", 1),
                Triple("HB1'", "CB'", 1),
                Triple("HB3'", "CB'", 1),
                Triple("1HG'", "CG'", 1),
                Triple("3HG'", "CG'", 1),
                Triple("HG1'", "CG'", 1),
                Triple("HG3'", "CG'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "CG'", 1),
                Triple("CD'", "CG'", 1),
                Triple("CD'", "OE1'", 2),
                Triple("CD'", "OE2'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1)
        ))

        val GLY = AminoAcid("GLY", listOf(
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("1HA'", "CA'", 1),
                Triple("3HA'", "CA'", 1),
                Triple("HA1'", "CA'", 1),
                Triple("HA3'", "CA'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "2HA'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1)
        ))

        val HID = AminoAcid("HID", listOf(
                Triple("1HD'", "ND1'", 1),
                Triple("HD1'", "ND1'", 1),
                Triple("1HE'", "CE1'", 1),
                Triple("HE1'", "CE1'", 1),
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2HB'", "CB'", 1),
                Triple("HB2'", "CB'", 1),
                Triple("2HD'", "CD2'", 1),
                Triple("HD2'", "CD2'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("1HB'", "CB'", 1),
                Triple("3HB'", "CB'", 1),
                Triple("HB1'", "CB'", 1),
                Triple("HB3'", "CB'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "CG'", 1),
                Triple("CD2'", "CG'", 2),
                Triple("CD2'", "NE2'", 1),
                Triple("CE1'", "ND1'", 1),
                Triple("CE1'", "NE2'", 2),
                Triple("CG'", "ND1'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1)
        ))

        val HIE = AminoAcid("HIE", listOf(
                Triple("1HE'", "CE1'", 1),
                Triple("HE1'", "CE1'", 1),
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2HB'", "CB'", 1),
                Triple("HB2'", "CB'", 1),
                Triple("2HD'", "CD2'", 1),
                Triple("HD1'", "CD2'", 1),
                Triple("HD2'", "CD2'", 1),
                Triple("2HE'", "NE2'", 1),
                Triple("HE2'", "NE2'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("1HB'", "CB'", 1),
                Triple("3HB'", "CB'", 1),
                Triple("HB1'", "CB'", 1),
                Triple("HB3'", "CB'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "CG'", 1),
                Triple("CD2'", "CG'", 2),
                Triple("CD2'", "NE2'", 1),
                Triple("CE1'", "ND1'", 2),
                Triple("CE1'", "NE2'", 1),
                Triple("CG'", "ND1'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1)
        ))

        val HIP = AminoAcid("HIP", listOf(
                Triple("1HD'", "ND1'", 1),
                Triple("HD1'", "ND1'", 1),
                Triple("1HE'", "CE1'", 1),
                Triple("HE1'", "CE1'", 1),
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2HB'", "CB'", 1),
                Triple("HB2'", "CB'", 1),
                Triple("2HD'", "CD2'", 1),
                Triple("HD2'", "CD2'", 1),
                Triple("2HE'", "NE2'", 1),
                Triple("HE2'", "NE2'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("1HB'", "CB'", 1),
                Triple("3HB'", "CB'", 1),
                Triple("HB1'", "CB'", 1),
                Triple("HB3'", "CB'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "CG'", 1),
                Triple("CD2'", "CG'", 2),
                Triple("CD2'", "NE2'", 1),
                Triple("CE1'", "ND1'", 2),
                Triple("CE1'", "NE2'", 1),
                Triple("CG'", "ND1'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1)
        ))

        val ILE = AminoAcid("ILE", listOf(
                Triple("1HD1'", "CD'", 1),
                Triple("1HD1'", "CD1'", 1),
                Triple("HD1'", "CD'", 1),
                Triple("HD1'", "CD1'", 1),
                Triple("HD11'", "CD'", 1),
                Triple("HD11'", "CD1'", 1),
                Triple("1HG2'", "CG2'", 1),
                Triple("HG21'", "CG2'", 1),
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2HD1'", "CD'", 1),
                Triple("2HD1'", "CD1'", 1),
                Triple("HD12'", "CD'", 1),
                Triple("HD12'", "CD1'", 1),
                Triple("HD2'", "CD'", 1),
                Triple("HD2'", "CD1'", 1),
                Triple("2HG1'", "CG1'", 1),
                Triple("HG12'", "CG1'", 1),
                Triple("2HG2'", "CG2'", 1),
                Triple("HG22'", "CG2'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("3HD1'", "CD'", 1),
                Triple("3HD1'", "CD1'", 1),
                Triple("HD13'", "CD'", 1),
                Triple("HD13'", "CD1'", 1),
                Triple("HD3'", "CD'", 1),
                Triple("HD3'", "CD1'", 1),
                Triple("1HG1'", "CG1'", 1),
                Triple("3HG1'", "CG1'", 1),
                Triple("HG11'", "CG1'", 1),
                Triple("HG13'", "CG1'", 1),
                Triple("3HG2'", "CG2'", 1),
                Triple("HG23'", "CG2'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "CG1'", 1),
                Triple("CB'", "CG2'", 1),
                Triple("CB'", "HB'", 1),
                Triple("CD'", "CG1'", 1),
                Triple("CD1'", "CG1'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1)
        ))

        val LEU = AminoAcid("LEU", listOf(
                Triple("1HD1'", "CD1'", 1),
                Triple("HD11'", "CD1'", 1),
                Triple("1HD2'", "CD2'", 1),
                Triple("HD21'", "CD2'", 1),
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2HB'", "CB'", 1),
                Triple("HB2'", "CB'", 1),
                Triple("2HD1'", "CD1'", 1),
                Triple("HD12'", "CD1'", 1),
                Triple("2HD2'", "CD2'", 1),
                Triple("HD22'", "CD2'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("1HB'", "CB'", 1),
                Triple("3HB'", "CB'", 1),
                Triple("HB1'", "CB'", 1),
                Triple("HB3'", "CB'", 1),
                Triple("3HD1'", "CD1'", 1),
                Triple("HD13'", "CD1'", 1),
                Triple("3HD2'", "CD2'", 1),
                Triple("HD23'", "CD2'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "CG'", 1),
                Triple("CD1'", "CG'", 1),
                Triple("CD2'", "CG'", 1),
                Triple("CG'", "HG'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1)
        ))

        val LYS = AminoAcid("LYS", listOf(
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("1HZ'", "NZ'", 1),
                Triple("HZ1'", "NZ'", 1),
                Triple("2HB'", "CB'", 1),
                Triple("HB2'", "CB'", 1),
                Triple("2HD'", "CD'", 1),
                Triple("HD2'", "CD'", 1),
                Triple("2HE'", "CE'", 1),
                Triple("HE2'", "CE'", 1),
                Triple("2HG'", "CG'", 1),
                Triple("HG2'", "CG'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("2HZ'", "NZ'", 1),
                Triple("HZ2'", "NZ'", 1),
                Triple("1HB'", "CB'", 1),
                Triple("3HB'", "CB'", 1),
                Triple("HB1'", "CB'", 1),
                Triple("HB3'", "CB'", 1),
                Triple("1HD'", "CD'", 1),
                Triple("3HD'", "CD'", 1),
                Triple("HD1'", "CD'", 1),
                Triple("HD3'", "CD'", 1),
                Triple("1HE'", "CE'", 1),
                Triple("3HE'", "CE'", 1),
                Triple("HE1'", "CE'", 1),
                Triple("HE3'", "CE'", 1),
                Triple("1HG'", "CG'", 1),
                Triple("3HG'", "CG'", 1),
                Triple("HG1'", "CG'", 1),
                Triple("HG3'", "CG'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("3HZ'", "NZ'", 1),
                Triple("HZ3'", "NZ'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "CG'", 1),
                Triple("CD'", "CE'", 1),
                Triple("CD'", "CG'", 1),
                Triple("CE'", "NZ'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1)
        ))

        val MET = AminoAcid("MET", listOf(
                Triple("1HE'", "CE'", 1),
                Triple("HE1'", "CE'", 1),
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2HB'", "CB'", 1),
                Triple("HB2'", "CB'", 1),
                Triple("2HE'", "CE'", 1),
                Triple("HE2'", "CE'", 1),
                Triple("2HG'", "CG'", 1),
                Triple("HG2'", "CG'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("1HB'", "CB'", 1),
                Triple("3HB'", "CB'", 1),
                Triple("HB1'", "CB'", 1),
                Triple("HB3'", "CB'", 1),
                Triple("3HE'", "CE'", 1),
                Triple("HE3'", "CE'", 1),
                Triple("1HG'", "CG'", 1),
                Triple("3HG'", "CG'", 1),
                Triple("HG1'", "CG'", 1),
                Triple("HG3'", "CG'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "CG'", 1),
                Triple("CE'", "SD'", 1),
                Triple("CG'", "SD'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1)
        ))

        val NME = AminoAcid("NME", listOf(
                Triple("1HA'", "C01'", 1),
                Triple("1HA'", "CA'", 1),
                Triple("1HA'", "CH3'", 1),
                Triple("1HH3'", "C01'", 1),
                Triple("1HH3'", "CA'", 1),
                Triple("1HH3'", "CH3'", 1),
                Triple("H02'", "C01'", 1),
                Triple("H02'", "CA'", 1),
                Triple("H02'", "CH3'", 1),
                Triple("HH31'", "C01'", 1),
                Triple("HH31'", "CA'", 1),
                Triple("HH31'", "CH3'", 1),
                Triple("2HA'", "C01'", 1),
                Triple("2HA'", "CA'", 1),
                Triple("2HA'", "CH3'", 1),
                Triple("2HH3'", "C01'", 1),
                Triple("2HH3'", "CA'", 1),
                Triple("2HH3'", "CH3'", 1),
                Triple("H03'", "C01'", 1),
                Triple("H03'", "CA'", 1),
                Triple("H03'", "CH3'", 1),
                Triple("HH32'", "C01'", 1),
                Triple("HH32'", "CA'", 1),
                Triple("HH32'", "CH3'", 1),
                Triple("3HA'", "C01'", 1),
                Triple("3HA'", "CA'", 1),
                Triple("3HA'", "CH3'", 1),
                Triple("3HH3'", "C01'", 1),
                Triple("3HH3'", "CA'", 1),
                Triple("3HH3'", "CH3'", 1),
                Triple("H04'", "C01'", 1),
                Triple("H04'", "CA'", 1),
                Triple("H04'", "CH3'", 1),
                Triple("HH33'", "C01'", 1),
                Triple("HH33'", "CA'", 1),
                Triple("HH33'", "CH3'", 1),
                Triple("C01'", "N'", 1),
                Triple("C01'", "N01'", 1),
                Triple("CA'", "N'", 1),
                Triple("CA'", "N01'", 1),
                Triple("CH3'", "N'", 1),
                Triple("CH3'", "N01'", 1),
                Triple("H'", "N'", 1),
                Triple("H'", "N01'", 1),
                Triple("H01'", "N'", 1),
                Triple("H01'", "N01'", 1),
                Triple("HN'", "N'", 1),
                Triple("HN'", "N01'", 1)
        ))

        val PHE = AminoAcid("PHE", listOf(
                Triple("1HD'", "CD1'", 1),
                Triple("HD1'", "CD1'", 1),
                Triple("1HE'", "CE1'", 1),
                Triple("HE1'", "CE1'", 1),
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2HB'", "CB'", 1),
                Triple("HB2'", "CB'", 1),
                Triple("2HD'", "CD2'", 1),
                Triple("HD2'", "CD2'", 1),
                Triple("2HE'", "CE2'", 1),
                Triple("HE2'", "CE2'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("1HB'", "CB'", 1),
                Triple("3HB'", "CB'", 1),
                Triple("HB1'", "CB'", 1),
                Triple("HB3'", "CB'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "CG'", 1),
                Triple("CD1'", "CE1'", 1),
                Triple("CD1'", "CG'", 2),
                Triple("CD2'", "CE2'", 2),
                Triple("CD2'", "CG'", 1),
                Triple("CE1'", "CZ'", 2),
                Triple("CE2'", "CZ'", 1),
                Triple("CZ'", "HZ'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1)
        ))

        val PRO = AminoAcid("PRO", listOf(
                Triple("2H'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("2HB'", "CB'", 1),
                Triple("HB2'", "CB'", 1),
                Triple("2HD'", "CD'", 1),
                Triple("HD2'", "CD'", 1),
                Triple("2HG'", "CG'", 1),
                Triple("HG2'", "CG'", 1),
                Triple("1H'", "N'", 1),
                Triple("3H'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("1HB'", "CB'", 1),
                Triple("3HB'", "CB'", 1),
                Triple("HB1'", "CB'", 1),
                Triple("HB3'", "CB'", 1),
                Triple("1HD'", "CD'", 1),
                Triple("3HD'", "CD'", 1),
                Triple("HD1'", "CD'", 1),
                Triple("HD3'", "CD'", 1),
                Triple("1HG'", "CG'", 1),
                Triple("3HG'", "CG'", 1),
                Triple("HG1'", "CG'", 1),
                Triple("HG3'", "CG'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "CG'", 1),
                Triple("CD'", "CG'", 1),
                Triple("CD'", "N'", 1)
        ))

        val SER = AminoAcid("SER", listOf(
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2HB'", "CB'", 1),
                Triple("HB2'", "CB'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("1HB'", "CB'", 1),
                Triple("3HB'", "CB'", 1),
                Triple("HB1'", "CB'", 1),
                Triple("HB3'", "CB'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "OG'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1),
                Triple("HG'", "OG'", 1),
                Triple("HG1'", "OG'", 1)
        ))

        val THR = AminoAcid("THR", listOf(
                Triple("1HG'", "OG1'", 1),
                Triple("HG1'", "OG1'", 1),
                Triple("1HG2'", "CG2'", 1),
                Triple("HG21'", "CG2'", 1),
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2HG2'", "CG2'", 1),
                Triple("HG22'", "CG2'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("3HG2'", "CG2'", 1),
                Triple("HG23'", "CG2'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "CG2'", 1),
                Triple("CB'", "HB'", 1),
                Triple("CB'", "OG1'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1)
        ))

        val TRP = AminoAcid("TRP", listOf(
                Triple("1HD'", "CD1'", 1),
                Triple("HD1'", "CD1'", 1),
                Triple("1HE'", "NE1'", 1),
                Triple("HE1'", "NE1'", 1),
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2HB'", "CB'", 1),
                Triple("HB2'", "CB'", 1),
                Triple("2HH'", "CH2'", 1),
                Triple("HH2'", "CH2'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("2HZ'", "CZ2'", 1),
                Triple("HZ2'", "CZ2'", 1),
                Triple("1HB'", "CB'", 1),
                Triple("3HB'", "CB'", 1),
                Triple("HB1'", "CB'", 1),
                Triple("HB3'", "CB'", 1),
                Triple("3HE'", "CE3'", 1),
                Triple("HE3'", "CE3'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("1HZ'", "CZ3'", 1),
                Triple("3HZ'", "CZ3'", 1),
                Triple("HZ3'", "CZ3'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "CG'", 1),
                Triple("CD1'", "CG'", 2),
                Triple("CD1'", "NE1'", 1),
                Triple("CD2'", "CE2'", 2),
                Triple("CD2'", "CE3'", 1),
                Triple("CD2'", "CG'", 1),
                Triple("CE2'", "CZ2'", 1),
                Triple("CE2'", "NE1'", 1),
                Triple("CE3'", "CZ3'", 2),
                Triple("CH2'", "CZ2'", 2),
                Triple("CH2'", "CZ3'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1)
        ))

        val TYR = AminoAcid("TYR", listOf(
                Triple("1HD'", "CD1'", 1),
                Triple("HD1'", "CD1'", 1),
                Triple("1HE'", "CE1'", 1),
                Triple("HE1'", "CE1'", 1),
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2HB'", "CB'", 1),
                Triple("HB2'", "CB'", 1),
                Triple("2HD'", "CD2'", 1),
                Triple("HD2'", "CD2'", 1),
                Triple("2HE'", "CE2'", 1),
                Triple("HE2'", "CE2'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("1HB'", "CB'", 1),
                Triple("3HB'", "CB'", 1),
                Triple("HB1'", "CB'", 1),
                Triple("HB3'", "CB'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "CG'", 1),
                Triple("CD1'", "CE1'", 1),
                Triple("CD1'", "CG'", 2),
                Triple("CD2'", "CE2'", 2),
                Triple("CD2'", "CG'", 1),
                Triple("CE1'", "CZ'", 2),
                Triple("CE2'", "CZ'", 1),
                Triple("CZ'", "OH'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1),
                Triple("HH'", "OH'", 1)
        ))

        val VAL = AminoAcid("VAL", listOf(
                Triple("1HG1'", "CG1'", 1),
                Triple("HG11'", "CG1'", 1),
                Triple("1HG2'", "CG2'", 1),
                Triple("HG21'", "CG2'", 1),
                Triple("1H'", "N'", 1),
                Triple("1HT'", "N'", 1),
                Triple("H1'", "N'", 1),
                Triple("HT1'", "N'", 1),
                Triple("2HG1'", "CG1'", 1),
                Triple("HG12'", "CG1'", 1),
                Triple("2HG2'", "CG2'", 1),
                Triple("HG22'", "CG2'", 1),
                Triple("2H'", "N'", 1),
                Triple("2HT'", "N'", 1),
                Triple("H2'", "N'", 1),
                Triple("HT2'", "N'", 1),
                Triple("3HG1'", "CG1'", 1),
                Triple("HG13'", "CG1'", 1),
                Triple("3HG2'", "CG2'", 1),
                Triple("HG23'", "CG2'", 1),
                Triple("3H'", "N'", 1),
                Triple("3HT'", "N'", 1),
                Triple("H3'", "N'", 1),
                Triple("HT3'", "N'", 1),
                Triple("C'", "CA'", 1),
                Triple("C'", "O'", 2),
                Triple("C'", "O1'", 2),
                Triple("C'", "OT1'", 2),
                Triple("CA'", "CB'", 1),
                Triple("CA'", "HA'", 1),
                Triple("CA'", "HA2'", 1),
                Triple("CA'", "N'", 1),
                Triple("CB'", "CG1'", 1),
                Triple("CB'", "CG2'", 1),
                Triple("CB'", "HB'", 1),
                Triple("H'", "N'", 1),
                Triple("HN'", "N'", 1)
        ))

        return (listOf(ACE, ALA, ARG, ASH, ASN, ASP, CYM, CYS, CYX, GLN, GLP, GLU, GLY, HID,
                HIE,
                HIP,
                ILE,
                LEU,
                LYS,
                MET,
                NME,
                PHE,
                PRO,
                SER,
                THR,
                TRP,
                TYR,
                VAL))
        }

    }